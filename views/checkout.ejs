<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Payment for <%= concert.title %> </title>
    <meta name="description" content="A demo of a payment on Stripe" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" type="text/css"  href="\css\index.css">
     <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <script src="https://js.stripe.com/v3/"></script>
    <script src="\js\searchbar.js" defer></script>
    <script src="\js\clr-switch.js" defer></script> 
    <script src="\js\dropdown.js" defer></script>
    <link rel="icon" type="image/png"  href="\media\32 x 32 icon.png">
  </head>
  <body>



    <%- include('partials/header')%>   



    










   <div class="text-center" id="container-new">

    <h3 class="mt-3">purchase for: <%= concert.title %> by <%= concert.artName %></h3>

    <div class="purchase-element text-center mt-2">
      <form id="payment-form" data-secret="<%= client_secret %>">
        <div id="payment-element">
          <!-- Elements will create form elements here -->
        </div>
         
  
     
       
  
      
         
  
          <p class="text-center mt-2">total to pay: USD $<%= originalPrice %> </p>
     
  
     
      
    
  
     
          <a href="/cancel-purchase">
          <p class="cancel">cancel</p>
        </a>
  
        <div class="pay-btn-cont" >
        <button id="submit" class="pay text-center buy mt-0 mb-3">Pay</button>
      </div>
      </form>
   </div>
   </div>
  

  <div class="mt-auto">
    <%- include('partials/footer')%>   
    
    
    </div> 
  </body>
</html>

<style>
  button.buy{
  width: 15vw;
  margin-top: 5vh;
  border-radius: 27px;
  background-color: #1ca78b;
  border: solid 3px #1ca78b;
}


.pay-btn-cont{
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

button.buy:hover{
  transform: scale(1.1);
}


p.cancel{
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

#payment-element{
  max-width: 40vw;
  min-width: 40vw;
  margin-left: 31%;
}

</style>





<script>
  
  // This is a public sample test API key.
// Donâ€™t submit any personally identifiable information in requests made with this key.
// Sign in to see your own test API key embedded in code samples.
const stripe = Stripe("pk_test_51KJaaVEnftAKbusCzsOPWLQrcvn1ZfLD2gDDiI5kyCQJ30SWimdUxs2TWS747lLMpS3mcx1M9WDlz1HPviw3r88o00xqfZN90z");

const options = {
    clientSecret: '<%= client_secret %>',
    // Fully customizable with appearance API.
    appearance:  {
      theme: 'stripe',

      variables: {
  colorPrimary: '#1ca78b',
  colorBackground: '#e8e8e8',
  colorText: '#3c3d3c',
  colorDanger: '#dd3535',
  fontFamily: 'Trebuchet MS',
  spacingUnit: '3px',
  borderRadius: '27px',
  padding: '10px'
},
  }
};
  
  // Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in step 2
  const elements = stripe.elements(options);
  
  // Create and mount the Payment Element
  const paymentElement = elements.create('payment');
  paymentElement.mount('#payment-element');

  

  const form = document.getElementById('payment-form');

  form.addEventListener('submit', async (event) => {
    event.preventDefault();
  
    const {error} = await stripe.confirmPayment({
      //`Elements` instance that was used to create the Payment Element
      elements,
      confirmParams: {
        return_url: 'https://www.youphonica.com/purchase-complete/post=<%= concert.id %>',
      },
    });
  
    if (error) {
      // This point will only be reached if there is an immediate error when
      // confirming the payment. Show error to your customer (for example, payment
      // details incomplete)
      const messageContainer = document.querySelector('#error-message');
      messageContainer.textContent = error.message;
    } else {
      // Your customer will be redirected to your `return_url`. For some payment
      // methods like iDEAL, your customer will be redirected to an intermediate
      // site first to authorize the payment, then redirected to the `return_url`.
    }
  });
  
</script>